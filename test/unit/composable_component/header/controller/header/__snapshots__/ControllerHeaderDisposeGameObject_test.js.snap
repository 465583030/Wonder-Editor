// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`controller header dispose gameObject dispose current gameObject from sceneTree dispose current gameObject, the sceneTree children should == 2 1`] = `
<article
  className="sceneTree-component"
>
  <article
    className="wonder-drag-tree"
  >
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "opacity": "1",
          }
        }
      >
        camera
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "opacity": "1",
          }
        }
      >
        gameObject2
      </li>
    </ul>
    <div
      className="wonder-disable-drag"
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "#c0c0c0",
        }
      }
    />
  </article>
</article>
`;

exports[`controller header dispose gameObject dispose current gameObject from sceneTree if not set currentGameObject, disposed button's disabled props should == true 1`] = `
<article
  className="header-component"
>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        undo
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        redo
      </button>
    </div>
  </div>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        add box
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        disabled={true}
        onClick={[Function]}
      >
        dispose
      </button>
    </div>
  </div>
  <div
    className="component-item"
  >
    <article
      className="wonder-file-input"
    >
      <button
        onClick={[Function]}
      >
        show Input
      </button>
    </article>
  </div>
  <div>
    <div
      className="component-item"
    >
      <article
        className="wonder-switch"
      >
        <button
          onClick={[Function]}
        >
          run
        </button>
      </article>
    </div>
  </div>
</article>
`;

exports[`controller header dispose gameObject dispose current gameObject from sceneTree if set currentGameObject, disposed button's disabled props should == false 1`] = `
<article
  className="header-component"
>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        undo
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        redo
      </button>
    </div>
  </div>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        add box
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        disabled={false}
        onClick={[Function]}
      >
        dispose
      </button>
    </div>
  </div>
  <div
    className="component-item"
  >
    <article
      className="wonder-file-input"
    >
      <button
        onClick={[Function]}
      >
        show Input
      </button>
    </article>
  </div>
  <div>
    <div
      className="component-item"
    >
      <article
        className="wonder-switch"
      >
        <button
          onClick={[Function]}
        >
          run
        </button>
      </article>
    </div>
  </div>
</article>
`;

exports[`controller header dispose gameObject test scene tree dispose current gameObject 1`] = `
<article
  className="sceneTree-component"
>
  <article
    className="wonder-drag-tree"
  >
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "opacity": "1",
          }
        }
      >
        camera
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "opacity": "1",
          }
        }
      >
        gameObject2
      </li>
    </ul>
    <div
      className="wonder-disable-drag"
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "#c0c0c0",
        }
      }
    />
  </article>
</article>
`;

exports[`controller header dispose gameObject test scene tree dispose current gameObject, the sceneTree children should == 2 1`] = `
<article
  className="sceneTree-component"
>
  <article
    className="wonder-drag-tree"
  >
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "opacity": "1",
          }
        }
      >
        camera
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "opacity": "1",
          }
        }
      >
        gameObject2
      </li>
    </ul>
    <div
      className="wonder-disable-drag"
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "#c0c0c0",
        }
      }
    />
  </article>
</article>
`;

exports[`controller header dispose gameObject test scene tree if not set currentGameObject, disposed button's disabled props should == true 1`] = `
<article
  className="header-component"
>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        undo
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        redo
      </button>
    </div>
  </div>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        add box
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        disabled={true}
        onClick={[Function]}
      >
        dispose
      </button>
    </div>
  </div>
  <div
    className="component-item"
  >
    <article
      className="wonder-file-input"
    >
      <button
        onClick={[Function]}
      >
        show Input
      </button>
    </article>
  </div>
  <div>
    <div
      className="component-item"
    >
      <article
        className="wonder-switch"
      >
        <button
          onClick={[Function]}
        >
          run
        </button>
      </article>
    </div>
  </div>
</article>
`;

exports[`controller header dispose gameObject test scene tree if set currentGameObject, disposed button's disabled props should == false 1`] = `
<article
  className="header-component"
>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        undo
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        redo
      </button>
    </div>
  </div>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        add box
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        disabled={false}
        onClick={[Function]}
      >
        dispose
      </button>
    </div>
  </div>
  <div
    className="component-item"
  >
    <article
      className="wonder-file-input"
    >
      <button
        onClick={[Function]}
      >
        show Input
      </button>
    </article>
  </div>
  <div>
    <div
      className="component-item"
    >
      <article
        className="wonder-switch"
      >
        <button
          onClick={[Function]}
        >
          run
        </button>
      </article>
    </div>
  </div>
</article>
`;

exports[`controller header dispose gameObject test sceneTree dispose current gameObject, the sceneTree children should == 2 1`] = `
<article
  className="sceneTree-component"
>
  <article
    className="wonder-drag-tree"
  >
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "opacity": "1",
          }
        }
      >
        camera
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDrop={[Function]}
        style={
          Object {
            "opacity": "1",
          }
        }
      >
        gameObject2
      </li>
    </ul>
    <div
      className="wonder-disable-drag"
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "#c0c0c0",
        }
      }
    />
  </article>
</article>
`;

exports[`controller header dispose gameObject test sceneTree if not set currentGameObject, disposed button's disabled props should == true 1`] = `
<article
  className="header-component"
>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        undo
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        redo
      </button>
    </div>
  </div>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        add box
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        disabled={true}
        onClick={[Function]}
      >
        dispose
      </button>
    </div>
  </div>
  <div
    className="component-item"
  >
    <article
      className="wonder-file-input"
    >
      <button
        onClick={[Function]}
      >
        show Input
      </button>
    </article>
  </div>
  <div>
    <div
      className="component-item"
    >
      <article
        className="wonder-switch"
      >
        <button
          onClick={[Function]}
        >
          run
        </button>
      </article>
    </div>
  </div>
</article>
`;

exports[`controller header dispose gameObject test sceneTree if set currentGameObject, disposed button's disabled props should == false 1`] = `
<article
  className="header-component"
>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        undo
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        redo
      </button>
    </div>
  </div>
  <div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        add box
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        disabled={false}
        onClick={[Function]}
      >
        dispose
      </button>
    </div>
  </div>
  <div
    className="component-item"
  >
    <article
      className="wonder-file-input"
    >
      <button
        onClick={[Function]}
      >
        show Input
      </button>
    </article>
  </div>
  <div>
    <div
      className="component-item"
    >
      <article
        className="wonder-switch"
      >
        <button
          onClick={[Function]}
        >
          run
        </button>
      </article>
    </div>
  </div>
</article>
`;
