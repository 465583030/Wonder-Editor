// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`controller header dispose gameObject test scene tree dispose current gameObject 1`] = `
<article
  className="wonder-sceneTree-component"
>
  <article
    className="wonder-drag-tree"
  >
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        camera
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        cube
      </li>
    </ul>
    <ul
      className="wonder-tree-node"
      draggable={true}
      onDragEnd={[Function]}
      onDragStart={[Function]}
    >
      <li
        onClick={[Function]}
        style={
          Object {
            "border": "1px solid red",
          }
        }
      >
        <div
          className="item-ground"
          draggable={true}
          onDragEnter={[Function]}
          onDragLeave={[Function]}
          onDragOver={[Function]}
          onDrop={[Function]}
        />
        Direction Light
      </li>
    </ul>
    <div
      className="wonder-disable-drag"
      onDragEnter={[Function]}
      onDragLeave={[Function]}
      onDragOver={[Function]}
      onDrop={[Function]}
      style={
        Object {
          "backgroundColor": "#c0c0c0",
        }
      }
    />
  </article>
</article>
`;

exports[`controller header dispose gameObject test scene tree if not set currentSceneTreeNode, disposed button's disabled props should == true 1`] = `
<article
  className="wonder-header-component"
>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        undo
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        redo
      </button>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        add box
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        disabled={true}
        onClick={[Function]}
      >
        dispose
      </button>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <article
        className="wonder-file-input"
      >
        <button
          onClick={[Function]}
        >
          show Input
        </button>
      </article>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <article
        className="wonder-switch"
      >
        <button
          onClick={[Function]}
        >
          stop
        </button>
      </article>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <article
        className="wonder-color-pick"
      >
        <div
          className=""
        >
          <span
            className=""
          >
            ambient color : 
          </span>
          <span
            className=""
          >
            #000000
          </span>
          <button
            className=""
            onClick={[Function]}
          >
            pick color
          </button>
        </div>
      </article>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        add empty gameObject
      </button>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <input
        className="file-upload"
        multiple={false}
        onChange={[Function]}
        type="file"
      />
    </div>
  </div>
</article>
`;

exports[`controller header dispose gameObject test scene tree if set currentSceneTreeNode, disposed button's disabled props should == false 1`] = `
<article
  className="wonder-header-component"
>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        undo
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        redo
      </button>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        add box
      </button>
    </div>
    <div
      className="component-item"
    >
      <button
        disabled={false}
        onClick={[Function]}
      >
        dispose
      </button>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <article
        className="wonder-file-input"
      >
        <button
          onClick={[Function]}
        >
          show Input
        </button>
      </article>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <article
        className="wonder-switch"
      >
        <button
          onClick={[Function]}
        >
          stop
        </button>
      </article>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <article
        className="wonder-color-pick"
      >
        <div
          className=""
        >
          <span
            className=""
          >
            ambient color : 
          </span>
          <span
            className=""
          >
            #000000
          </span>
          <button
            className=""
            onClick={[Function]}
          >
            pick color
          </button>
        </div>
      </article>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <button
        onClick={[Function]}
      >
        add empty gameObject
      </button>
    </div>
  </div>
  <div
    className="header-item"
  >
    <div
      className="component-item"
    >
      <input
        className="file-upload"
        multiple={false}
        onChange={[Function]}
        type="file"
      />
    </div>
  </div>
</article>
`;
