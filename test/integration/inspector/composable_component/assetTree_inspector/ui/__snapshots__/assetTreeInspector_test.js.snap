// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AssetTreeInspector prepare currentSelectSource test component snapshot else test set folder to be current node 1`] = `
<article
  className="wonder-inspector-component"
>
  <article
    className="wonder-inspector-assetTree"
  >
    <div
      className=""
    >
      <h1>
        Folder
      </h1>
      <hr />
      <span
        className=""
      >
        name:
      </span>
      <input
        className="input-component float-input"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
        value="newFolder"
      />
    </div>
  </article>
</article>
`;

exports[`AssetTreeInspector prepare currentSelectSource test component snapshot else test set json to be current node 1`] = `
<article
  className="wonder-inspector-component"
>
  <article
    className="wonder-inspector-assetTree"
  >
    <div>
      <h1>
        Json
      </h1>
      <hr />
      <span
        className=""
      >
        name:
      </span>
      <input
        className="input-component float-input"
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
        value="newJson"
      />
      <p>
        json result
      </p>
    </div>
  </article>
</article>
`;

exports[`AssetTreeInspector prepare currentSelectSource test component snapshot else test set texture to be current node 1`] = `
<article
  className="wonder-inspector-component"
>
  <article
    className="wonder-inspector-assetTree"
  >
    <article
      className="wonder-texture-assetTree"
    >
      <div
        className=""
      >
        <h1>
          Texture
        </h1>
        <hr />
        <div
          className=""
        >
          <article
            className="wonder-string-input"
          >
            <span
              className="component-label"
            >
              name : 
            </span>
            <input
              className="input-component float-input"
              onBlur={[Function]}
              onChange={[Function]}
              type="text"
              value="texture3"
            />
          </article>
        </div>
        <div
          className=""
        >
          <article
            className="wonder-select"
          >
            <span
              className=""
            >
              WrapS Mode
            </span>
            <select
              onChange={[Function]}
              value="0"
            >
              <option
                value="2"
              >
                Repeat
              </option>
              <option
                value="1"
              >
                Mirrored_repeat
              </option>
              <option
                value="0"
              >
                Clamp_to_edge
              </option>
            </select>
          </article>
        </div>
        <div
          className=""
        >
          <article
            className="wonder-select"
          >
            <span
              className=""
            >
              WrapT Mode
            </span>
            <select
              onChange={[Function]}
              value="0"
            >
              <option
                value="2"
              >
                Repeat
              </option>
              <option
                value="1"
              >
                Mirrored_repeat
              </option>
              <option
                value="0"
              >
                Clamp_to_edge
              </option>
            </select>
          </article>
        </div>
        <div
          className=""
        >
          <article
            className="wonder-select"
          >
            <span
              className=""
            >
              Mag Filter Mode
            </span>
            <select
              onChange={[Function]}
              value="1"
            >
              <option
                value="0"
              >
                Nearest
              </option>
              <option
                value="1"
              >
                Linear
              </option>
              <option
                value="2"
              >
                Nearest_mipmap_nearest
              </option>
              <option
                value="3"
              >
                Linear_mipmap_nearest
              </option>
              <option
                value="4"
              >
                Nearest_mipmap_linear
              </option>
              <option
                value="5"
              >
                Linear_mipmap_linear
              </option>
            </select>
          </article>
        </div>
        <div
          className=""
        >
          <article
            className="wonder-select"
          >
            <span
              className=""
            >
              Min Filter Mode
            </span>
            <select
              onChange={[Function]}
              value="0"
            >
              <option
                value="0"
              >
                Nearest
              </option>
              <option
                value="1"
              >
                Linear
              </option>
              <option
                value="2"
              >
                Nearest_mipmap_nearest
              </option>
              <option
                value="3"
              >
                Linear_mipmap_nearest
              </option>
              <option
                value="4"
              >
                Nearest_mipmap_linear
              </option>
              <option
                value="5"
              >
                Linear_mipmap_linear
              </option>
            </select>
          </article>
        </div>
      </div>
    </article>
  </article>
</article>
`;

exports[`AssetTreeInspector prepare currentSelectSource test component snapshot if hasn't current node, show nothing 1`] = `
<article
  className="wonder-inspector-component"
/>
`;

exports[`AssetTreeInspector prepare currentSelectSource test node rename deal with specific case key in '', trigger onBlur, the input value should be original name 1`] = `
<article
  className="wonder-inspector-component"
>
  <article
    className="wonder-inspector-assetTree"
  >
    <div
      className=""
    >
      <h1>
        Folder
      </h1>
      <hr />
      <span
        className=""
      >
        name:
      </span>
      <input
        className="input-component float-input"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
        value="newFolder"
      />
    </div>
  </article>
</article>
`;

exports[`AssetTreeInspector prepare currentSelectSource test node rename test rename asset tree children node if node has ext name if rename success, the newName should include ext name 1`] = `
<article
  className="wonder-asset-component"
>
  <div
    className="asset-tree"
  >
    <article
      className="wonder-asset-header"
    >
      <div
        className="header-item"
      >
        <button
          onClick={[Function]}
        >
          addFolder
        </button>
      </div>
      <div
        className="header-item"
      >
        <button
          disabled={false}
          onClick={[Function]}
        >
          remove
        </button>
      </div>
      <div
        className="header-item"
      >
        <input
          className="file-upload"
          multiple={true}
          onChange={[Function]}
          type="file"
        />
      </div>
      <div
        className=""
      >
        <button
          onClick={[Function]}
        >
          addMaterial
        </button>
      </div>
    </article>
    <article
      className="wonder-asset-assetTree"
    >
      <ul
        className="wonder-tree-node"
      >
        <li
          onClick={[Function]}
          style={
            Object {
              "background": "#c0c0c0",
            }
          }
        >
          <div
            className="item-ground"
            draggable={true}
            onDragEnter={[Function]}
            onDragLeave={[Function]}
            onDragOver={[Function]}
            onDrop={[Function]}
          />
          <img
            src="./public/img/12.jpg"
          />
          Assets
        </li>
        <ul
          className="wonder-tree-node"
          draggable={true}
          onDragEnd={[Function]}
          onDragStart={[Function]}
        >
          <li
            onClick={[Function]}
            style={
              Object {
                "border": "1px solid red",
              }
            }
          >
            <div
              className="item-ground"
              draggable={true}
              onDragEnter={[Function]}
              onDragLeave={[Function]}
              onDragOver={[Function]}
              onDrop={[Function]}
            />
            <img
              src="./public/img/12.jpg"
            />
            newFolder
          </li>
        </ul>
        <ul
          className="wonder-tree-node"
          draggable={true}
          onDragEnd={[Function]}
          onDragStart={[Function]}
        >
          <li
            onClick={[Function]}
            style={
              Object {
                "border": "1px solid red",
              }
            }
          >
            <div
              className="item-ground"
              draggable={true}
              onDragEnter={[Function]}
              onDragLeave={[Function]}
              onDragOver={[Function]}
              onDrop={[Function]}
            />
            <img
              src="./public/img/12.jpg"
            />
            newFolder 1
          </li>
        </ul>
      </ul>
    </article>
  </div>
  <article
    className="wonder-asset-assetChildren"
  >
    <article
      className="wonder-asset-folderBox"
      id="folder-4"
      style={
        Object {
          "border": "1px solid red",
        }
      }
    >
      <div
        className="item-ground"
        draggable={true}
        onDragEnd={[Function]}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
      />
      <img
        src="./public/img/11.jpg"
      />
      <span
        className="item-text"
      >
        newFolder
      </span>
    </article>
    <article
      className="wonder-asset-folderBox"
      id="folder-5"
      style={
        Object {
          "border": "1px solid red",
        }
      }
    >
      <div
        className="item-ground"
        draggable={true}
        onDragEnd={[Function]}
        onDragEnter={[Function]}
        onDragLeave={[Function]}
        onDragOver={[Function]}
        onDragStart={[Function]}
        onDrop={[Function]}
      />
      <img
        src="./public/img/11.jpg"
      />
      <span
        className="item-text"
      >
        newFolder 1
      </span>
    </article>
    <article
      className="wonder-asset-fileBox "
      onClick={[Function]}
    >
      <img
        onDragStart={[Function]}
        src="texture3img"
      />
      <span
        className="item-text"
      >
        texture3
      </span>
    </article>
    <article
      className="wonder-asset-fileBox item-active"
      onClick={[Function]}
    >
      <img
        onDragStart={[Function]}
        src="./public/img/12.jpg"
      />
      <span
        className="item-text"
      >
        mickey_json
      </span>
    </article>
    <article
      className="wonder-asset-fileBox "
      onClick={[Function]}
    >
      <img
        onDragStart={[Function]}
        src="texture5img"
      />
      <span
        className="item-text"
      >
        texture5
      </span>
    </article>
  </article>
</article>
`;

exports[`AssetTreeInspector prepare currentSelectSource test node rename test rename asset tree children node if node has ext name rename input shouldn't show it 1`] = `
<article
  className="wonder-inspector-component"
>
  <article
    className="wonder-inspector-assetTree"
  >
    <div>
      <h1>
        Json
      </h1>
      <hr />
      <span
        className=""
      >
        name:
      </span>
      <input
        className="input-component float-input"
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
        value="newJson"
      />
      <p>
        json result
      </p>
    </div>
  </article>
</article>
`;

exports[`AssetTreeInspector prepare currentSelectSource test node rename test rename to specific name 1`] = `
<article
  className="wonder-inspector-component"
>
  <article
    className="wonder-inspector-assetTree"
  >
    <div
      className=""
    >
      <h1>
        Folder
      </h1>
      <hr />
      <span
        className=""
      >
        name:
      </span>
      <input
        className="input-component float-input"
        disabled={false}
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
        value="mickeyFolder"
      />
    </div>
  </article>
</article>
`;

exports[`AssetTreeInspector prepare currentSelectSource test node rename test the root folder can't be rename the root treeNode->rename-input->disabled should be true 1`] = `
<article
  className="wonder-inspector-component"
>
  <article
    className="wonder-inspector-assetTree"
  >
    <div
      className=""
    >
      <h1>
        Folder
      </h1>
      <hr />
      <span
        className=""
      >
        name:
      </span>
      <input
        className="input-component float-input"
        disabled={true}
        onBlur={[Function]}
        onChange={[Function]}
        type="text"
        value="Assets"
      />
    </div>
  </article>
</article>
`;
